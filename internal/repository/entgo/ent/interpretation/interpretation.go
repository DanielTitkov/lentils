// Code generated by entc, DO NOT EDIT.

package interpretation

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the interpretation type in the database.
	Label = "interpretation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldRange holds the string denoting the range field in the database.
	FieldRange = "range"
	// EdgeTranslations holds the string denoting the translations edge name in mutations.
	EdgeTranslations = "translations"
	// EdgeScale holds the string denoting the scale edge name in mutations.
	EdgeScale = "scale"
	// Table holds the table name of the interpretation in the database.
	Table = "interpretations"
	// TranslationsTable is the table that holds the translations relation/edge.
	TranslationsTable = "interpretation_translations"
	// TranslationsInverseTable is the table name for the InterpretationTranslation entity.
	// It exists in this package in order to avoid circular dependency with the "interpretationtranslation" package.
	TranslationsInverseTable = "interpretation_translations"
	// TranslationsColumn is the table column denoting the translations relation/edge.
	TranslationsColumn = "interpretation_translations"
	// ScaleTable is the table that holds the scale relation/edge.
	ScaleTable = "interpretations"
	// ScaleInverseTable is the table name for the Scale entity.
	// It exists in this package in order to avoid circular dependency with the "scale" package.
	ScaleInverseTable = "scales"
	// ScaleColumn is the table column denoting the scale relation/edge.
	ScaleColumn = "scale_interpretations"
)

// Columns holds all SQL columns for interpretation fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldRange,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "interpretations"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"scale_interpretations",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
